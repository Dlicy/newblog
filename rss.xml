<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:version="2.0"><channel><title>ðŸ’  Frosti</title><description>A clean, elegant, and fast static blog template! ðŸš€ Developed with Astro</description><link>https://frosti.saroprock.com/</link><language>en</language><item><title>Adding Comment Systems to Frosti</title><link>https://frosti.saroprock.com/blog/adding-comment-systems/</link><guid isPermaLink="true">https://frosti.saroprock.com/blog/adding-comment-systems/</guid><description>A comprehensive guide on how to integrate Twikoo and Waline comment systems into your Frosti blog</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://frosti.saroprock.com/blog/adding-comment-systems/&quot;&gt;https://frosti.saroprock.com/blog/adding-comment-systems/&lt;/a&gt;&lt;/blockquote&gt; &lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;One of the essential features of any blog is the ability for readers to engage with your content through comments. While Frosti provides an excellent foundation for your Astro-based blog, adding a comment system requires a few additional steps. This guide will walk you through integrating popular comment systems like Twikoo and Waline into your Frosti blog.&lt;/p&gt;
&lt;p&gt;Static sites like those built with Astro don&amp;#39;t have built-in comment systems since they lack server-side processing. However, we can use third-party comment services that handle the backend for us, while we integrate their frontend components into our site.&lt;/p&gt;
&lt;h2&gt;Creating Comment Components in Astro&lt;/h2&gt;
&lt;p&gt;Before diving into specific comment systems, let&amp;#39;s understand how to create and use components in Astro. We&amp;#39;ll create reusable components for each comment system that can be easily added to any page.&lt;/p&gt;
&lt;h3&gt;Component Structure&lt;/h3&gt;
&lt;p&gt;We&amp;#39;ll create our comment components in the &lt;code&gt;src/components/comments&lt;/code&gt; directory. First, let&amp;#39;s make sure this directory exists:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir -p src/components/comments
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Integrating Twikoo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://twikoo.js.org/&quot;&gt;Twikoo&lt;/a&gt; is a simple, safe comment system that supports Markdown and does not require user login. It&amp;#39;s easy to set up and can be deployed on various platforms.&lt;/p&gt;
&lt;h3&gt;Step 1: Set Up Twikoo Backend&lt;/h3&gt;
&lt;p&gt;Before integrating the frontend component, you need to set up the Twikoo backend. You can deploy it on:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Tencent CloudBase&lt;/strong&gt; (recommended for users in Asia)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vercel&lt;/strong&gt; (recommended for global access)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Follow the &lt;a href=&quot;https://twikoo.js.org/en/quick-start.html&quot;&gt;official Twikoo deployment guide&lt;/a&gt; to set up your backend.&lt;/p&gt;
&lt;p&gt;Once deployed, you&amp;#39;ll get an environment ID (&lt;code&gt;envId&lt;/code&gt;), which you&amp;#39;ll need for the frontend integration.&lt;/p&gt;
&lt;h3&gt;Step 2: Create the Twikoo Component&lt;/h3&gt;
&lt;p&gt;Let&amp;#39;s create a reusable Twikoo component:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;touch src/components/comments/Twikoo.astro
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, let&amp;#39;s add the code to this component:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;---
// Props interface for the component
interface Props {
  envId: string; // Your Twikoo environment ID
  region?: string; // Optional region (default: ap-shanghai)
  path?: string; // Optional custom path for comments
  lang?: string; // Optional language setting
}

// Destructure props with defaults
const { envId, region = &amp;quot;ap-shanghai&amp;quot;, path = Astro.url.pathname, lang = &amp;quot;en&amp;quot; } = Astro.props;
---

&amp;lt;div id=&amp;quot;twikoo-container&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;script define:vars={{ envId, region, path, lang }}&amp;gt;
  document.addEventListener(&amp;quot;DOMContentLoaded&amp;quot;, async () =&amp;gt; {
    try {
      // Dynamically import Twikoo script
      const twikooScript = document.createElement(&amp;quot;script&amp;quot;);
      twikooScript.src = &amp;quot;https://cdn.jsdelivr.net/npm/twikoo@1.6.42/dist/twikoo.all.min.js&amp;quot;;
      twikooScript.async = true;

      twikooScript.onload = () =&amp;gt; {
        twikoo.init({
          envId: envId,
          el: &amp;quot;#twikoo-container&amp;quot;,
          region: region,
          path: path,
          lang: lang,
        });
      };

      document.head.appendChild(twikooScript);
    } catch (error) {
      console.error(&amp;quot;Failed to load Twikoo:&amp;quot;, error);
    }
  });
&amp;lt;/script&amp;gt;

&amp;lt;style&amp;gt;
  #twikoo-container {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Step 3: Using the Twikoo Component&lt;/h3&gt;
&lt;p&gt;You can now use the Twikoo component in any of your Astro pages or layouts. Here&amp;#39;s how to add it to your blog post template:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;---
// In your blog post layout file
import Twikoo from &amp;quot;../../components/comments/Twikoo.astro&amp;quot;;
// Other imports and frontmatter...
---

&amp;lt;!-- Your blog post content --&amp;gt;
&amp;lt;article&amp;gt;
  &amp;lt;slot /&amp;gt;
&amp;lt;/article&amp;gt;

&amp;lt;!-- Add the comment section --&amp;gt;
&amp;lt;section class=&amp;quot;comments&amp;quot;&amp;gt;
  &amp;lt;h2&amp;gt;Comments&amp;lt;/h2&amp;gt;
  &amp;lt;Twikoo envId=&amp;quot;your-environment-id&amp;quot; /&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Replace &lt;code&gt;&amp;quot;your-environment-id&amp;quot;&lt;/code&gt; with your actual Twikoo environment ID.&lt;/p&gt;
&lt;h2&gt;Integrating Waline&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://waline.js.org/&quot;&gt;Waline&lt;/a&gt; is a simple, safe comment system with backend and frontend separation. It&amp;#39;s feature-rich and highly customizable.&lt;/p&gt;
&lt;h3&gt;Step 1: Set Up Waline Backend&lt;/h3&gt;
&lt;p&gt;Before adding Waline to your site, you need to set up the backend:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a LeanCloud application to store your comments&lt;/li&gt;
&lt;li&gt;Deploy the Waline server to Vercel or other platforms&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Follow the &lt;a href=&quot;https://waline.js.org/guide/get-started/&quot;&gt;official Waline guide&lt;/a&gt; to set up your backend service. After deploying, you&amp;#39;ll get a server URL that you&amp;#39;ll need for the frontend component.&lt;/p&gt;
&lt;h3&gt;Step 2: Create the Waline Component&lt;/h3&gt;
&lt;p&gt;Let&amp;#39;s create a reusable Waline component:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;touch src/components/comments/Waline.astro
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, let&amp;#39;s add the code to this component:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;---
// Props interface for the component
interface Props {
  serverURL: string; // Your Waline server URL
  path?: string; // Optional custom path for comments
  lang?: string; // Optional language setting
  dark?: string; // Optional dark mode CSS selector
  emoji?: string[]; // Optional emoji arrays
  meta?: string[]; // Optional comment information to show
  requiredMeta?: string[]; // Optional required metadata
  reaction?: boolean; // Enable article reactions
  pageview?: boolean; // Enable pageview statistics
}

// Destructure props with defaults
const {
  serverURL,
  path = Astro.url.pathname,
  lang = &amp;quot;en&amp;quot;,
  dark = &amp;quot;html.dark&amp;quot;,
  emoji = [&amp;quot;https://unpkg.com/@waline/emojis@1.1.0/weibo&amp;quot;, &amp;quot;https://unpkg.com/@waline/emojis@1.1.0/bilibili&amp;quot;],
  meta = [&amp;quot;nick&amp;quot;, &amp;quot;mail&amp;quot;, &amp;quot;link&amp;quot;],
  requiredMeta = [],
  reaction = false,
  pageview = false,
} = Astro.props;
---

&amp;lt;div id=&amp;quot;waline-container&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;script
  define:vars={{
    serverURL,
    path,
    lang,
    dark,
    emoji,
    meta,
    requiredMeta,
    reaction,
    pageview,
  }}
&amp;gt;
  document.addEventListener(&amp;quot;DOMContentLoaded&amp;quot;, async () =&amp;gt; {
    try {
      // Load Waline CSS
      const walineCSS = document.createElement(&amp;quot;link&amp;quot;);
      walineCSS.rel = &amp;quot;stylesheet&amp;quot;;
      walineCSS.href = &amp;quot;https://unpkg.com/@waline/client@v3/dist/waline.css&amp;quot;;
      document.head.appendChild(walineCSS);

      // Load Waline JS
      const walineScript = document.createElement(&amp;quot;script&amp;quot;);
      walineScript.src = &amp;quot;https://unpkg.com/@waline/client@v3/dist/waline.js&amp;quot;;
      walineScript.async = true;

      walineScript.onload = () =&amp;gt; {
        // Initialize Waline
        Waline.init({
          el: &amp;quot;#waline-container&amp;quot;,
          serverURL: serverURL,
          path: path,
          lang: lang,
          dark: dark,
          emoji: emoji,
          meta: meta,
          requiredMeta: requiredMeta,
          reaction: reaction,
          pageview: pageview,
        });
      };

      document.head.appendChild(walineScript);
    } catch (error) {
      console.error(&amp;quot;Failed to load Waline:&amp;quot;, error);
    }
  });
&amp;lt;/script&amp;gt;

&amp;lt;style&amp;gt;
  #waline-container {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Step 3: Using the Waline Component&lt;/h3&gt;
&lt;p&gt;You can now use the Waline component in your Astro pages or layouts. Here&amp;#39;s how to add it to your blog post template:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;---
// In your blog post layout file
import Waline from &amp;quot;../../components/comments/Waline.astro&amp;quot;;
// Other imports and frontmatter...
---

&amp;lt;!-- Your blog post content --&amp;gt;
&amp;lt;article&amp;gt;
  &amp;lt;slot /&amp;gt;
&amp;lt;/article&amp;gt;

&amp;lt;!-- Add the comment section --&amp;gt;
&amp;lt;section class=&amp;quot;comments&amp;quot;&amp;gt;
  &amp;lt;h2&amp;gt;Comments&amp;lt;/h2&amp;gt;
  &amp;lt;Waline serverURL=&amp;quot;https://your-waline-server.vercel.app&amp;quot; /&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Replace &lt;code&gt;&amp;quot;https://your-waline-server.vercel.app&amp;quot;&lt;/code&gt; with your actual Waline server URL.&lt;/p&gt;
&lt;h2&gt;Adding Comment System Selection&lt;/h2&gt;
&lt;p&gt;To make your blog more flexible, you might want to allow users to choose their preferred comment system through configuration. Here&amp;#39;s a simple approach to achieve this:&lt;/p&gt;
&lt;h3&gt;Step 1: Create a Configuration File&lt;/h3&gt;
&lt;p&gt;First, create a configuration file for your blog:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;touch src/config.ts
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add comment system configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;export const siteConfig = {
  // Other site configuration...
  comments: {
    // Which comment system to use: &amp;#39;twikoo&amp;#39;, &amp;#39;waline&amp;#39;, or &amp;#39;none&amp;#39;
    provider: &amp;quot;twikoo&amp;quot;,

    // Twikoo configuration
    twikoo: {
      envId: &amp;quot;your-environment-id&amp;quot;,
      region: &amp;quot;ap-shanghai&amp;quot;
    },

    // Waline configuration
    waline: {
      serverURL: &amp;quot;https://your-waline-server.vercel.app&amp;quot;
    }
  }
};
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Step 2: Create a CommentSystem Component&lt;/h3&gt;
&lt;p&gt;Now, create a component that will conditionally render the selected comment system:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;touch src/components/comments/CommentSystem.astro
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the following code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;---
import { siteConfig } from &amp;quot;../../config&amp;quot;;
import Twikoo from &amp;quot;./Twikoo.astro&amp;quot;;
import Waline from &amp;quot;./Waline.astro&amp;quot;;

// Get comment system configuration
const { provider, twikoo, waline } = siteConfig.comments;
---

&amp;lt;div class=&amp;quot;comments-container&amp;quot;&amp;gt;
  &amp;lt;h2&amp;gt;Comments&amp;lt;/h2&amp;gt;

  {provider === &amp;quot;twikoo&amp;quot; &amp;amp;&amp;amp; &amp;lt;Twikoo envId={twikoo.envId} region={twikoo.region} /&amp;gt;}

  {provider === &amp;quot;waline&amp;quot; &amp;amp;&amp;amp; &amp;lt;Waline serverURL={waline.serverURL} /&amp;gt;}

  {provider === &amp;quot;none&amp;quot; &amp;amp;&amp;amp; &amp;lt;p&amp;gt;Comments are disabled for this site.&amp;lt;/p&amp;gt;}
&amp;lt;/div&amp;gt;

&amp;lt;style&amp;gt;
  .comments-container {
    margin-top: 3rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--color-border);
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Step 3: Use the CommentSystem Component&lt;/h3&gt;
&lt;p&gt;Finally, use this component in your blog post layout:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;---
// In your blog post layout file
import CommentSystem from &amp;quot;../../components/comments/CommentSystem.astro&amp;quot;;
// Other imports and frontmatter...
---

&amp;lt;!-- Your blog post content --&amp;gt;
&amp;lt;article&amp;gt;
  &amp;lt;slot /&amp;gt;
&amp;lt;/article&amp;gt;

&amp;lt;!-- Add the comment section --&amp;gt;
&amp;lt;CommentSystem /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Troubleshooting&lt;/h2&gt;
&lt;h3&gt;Common Issues with Twikoo:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Script Loading Failures&lt;/strong&gt;: If the Twikoo script fails to load, check your network connection and make sure the CDN is accessible.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Environment ID Issues&lt;/strong&gt;: Double-check your environment ID to ensure it&amp;#39;s correct.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Region Errors&lt;/strong&gt;: If you&amp;#39;re using Tencent CloudBase, make sure you&amp;#39;ve set the correct region.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Common Issues with Waline:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Server URL Errors&lt;/strong&gt;: Make sure your Waline server URL is correct and the server is running.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Database Connection Issues&lt;/strong&gt;: Check that your LeanCloud application is properly set up and the keys are correctly configured.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Missing Required Fields&lt;/strong&gt;: If users can&amp;#39;t submit comments, check if you&amp;#39;ve set required fields that users aren&amp;#39;t filling out.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Extending with Other Comment Systems&lt;/h2&gt;
&lt;p&gt;The approach we&amp;#39;ve taken makes it easy to add support for additional comment systems to your Frosti blog. Here&amp;#39;s how you might add another system:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new component for the comment system in &lt;code&gt;src/components/comments/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Update the &lt;code&gt;config.ts&lt;/code&gt; file to include configuration for the new system&lt;/li&gt;
&lt;li&gt;Modify the &lt;code&gt;CommentSystem.astro&lt;/code&gt; component to conditionally render the new system&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We welcome contributions from the community to add support for other popular comment systems such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disqus&lt;/li&gt;
&lt;li&gt;Utterances (GitHub-based comments)&lt;/li&gt;
&lt;li&gt;Giscus (GitHub Discussions-based comments)&lt;/li&gt;
&lt;li&gt;Remark42&lt;/li&gt;
&lt;li&gt;CommentBox&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Adding a comment system to your Frosti blog enhances user engagement and creates a community around your content. In this guide, we&amp;#39;ve covered how to integrate two popular comment systems, Twikoo and Waline, providing step-by-step instructions for setting up both the backend and frontend components.&lt;/p&gt;
&lt;p&gt;Remember that each comment system has its own strengths and considerations, so choose the one that best fits your needs and your audience&amp;#39;s preferences.&lt;/p&gt;
&lt;p&gt;If you&amp;#39;ve implemented another comment system for your Frosti blog, consider sharing your work with the community to help others enhance their blogs as well.&lt;/p&gt;
&lt;p&gt;Happy blogging and engaging with your readers!&lt;/p&gt;
</content:encoded><dc:creator>Frosti</dc:creator><pubDate>Mon, 14 Apr 2025 16:00:00 GMT</pubDate></item><item><title>Under The Sacred Hall</title><link>https://frosti.saroprock.com/blog/under-the-sacred-hall/</link><guid isPermaLink="true">https://frosti.saroprock.com/blog/under-the-sacred-hall/</guid><description>A test</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://frosti.saroprock.com/blog/under-the-sacred-hall/&quot;&gt;https://frosti.saroprock.com/blog/under-the-sacred-hall/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;Some people are keen on traveling to various places to &amp;quot;check in,&amp;quot; others shuttle between exhibitions and events, while others chase after trending topics, seeking novel and exciting experiences. Through different means, they encounter fresh and diverse things. They proclaim, &amp;quot;Iâ€™ve seen the world.&amp;quot;&lt;/p&gt;
&lt;p&gt;Reading the passage above, how would you structure your essay? It seems too simple. &amp;quot;Seeing the world is not just about exploring the external but enriching the inner self.&amp;quot; Or, &amp;quot;The approach and purpose of broadening horizons should complement each other and not deviate from the original intent.&amp;quot; The list goes on. Indeed, this material as an exam topic feels overly straightforward: strikingly apparent counterexamples and shallow behavior leave little room for additional arguments. I understand this reasoning, yet I donâ€™t dare to write it this wayâ€”neither the old me nor the me in an exam room would hesitate like this. But I simply donâ€™t understand: while striving for the ultimate within and eliminating superficial distractions is admirable, have we perhaps become overly fixated on an unattainable pinnacle? To the extent that we scorn such behavior, refuting it with irrefutable truths, and dare not take another step without properly contemplating what &amp;quot;seeing the world&amp;quot; truly means?&lt;/p&gt;
&lt;p&gt;What is &amp;quot;irrefutable truth&amp;quot;? I think itâ€™s likely the most precious thing in the &amp;quot;sacred hall&amp;quot;â€”a truth untainted by interference, detached from worldly distractions. And the phantoms dwelling in this hall are, naturally, those &amp;quot;sages&amp;quot;â€”embodiments of truth for those below to emulate. However, sages cannot proclaim themselves as such, or according to truth, they would no longer qualify. Thus, to this day, Iâ€™ve never encountered a living sage, only glimpsed them occasionally on bulletin boards or in textbooks.&lt;/p&gt;
&lt;p&gt;Back to the topic. Honestly, if someone truly toured the world, pursued trends, and experienced novel things, I would admire them from the bottom of my heart. Because I havenâ€™t done so myself, &amp;quot;seeing the world through its myriad things&amp;quot; is a crucial pathway to broaden oneâ€™s horizons. Simply put, &amp;quot;observing externalities&amp;quot; is a &lt;em&gt;necessary condition&lt;/em&gt; for &amp;quot;seeing the world.&amp;quot; If one lacks a sufficient accumulation of what is often deemed shallow and superficial, how can they claim to have truly broadened their horizons? Of course, we must acknowledge the potential neglect of the inner realm. Yet it feels tragic: a group of students who havenâ€™t seen much of the world condemning &amp;quot;observing externalities&amp;quot; with truths taught by sagesâ€”how strange and disheartening. Perhaps this is the sacred hall&amp;#39;s strength: its truth shines so brightly that it obliterates all &amp;quot;darkness&amp;quot; that doesnâ€™t align. Bathed in this light, I feel a refreshing and sanctified clarity within but lose touch with what the real world is, unaware that I, too, am in the darkness. Such a state, free from distractions and focused upwardâ€”how beautiful...&lt;/p&gt;
&lt;p&gt;Why am I, too, in &amp;quot;darkness&amp;quot;? Perhaps itâ€™s an inescapable flaw as a human being. Iâ€™m too obedientâ€”principles preached in childhood have seeped into my bones, making me vow to become a sage. But despite saying this, Iâ€™ve transgressed those inner rules countless times... Maybe itâ€™s humanityâ€™s basest desires. You can, of course, criticize and reproach me harshly; I wonâ€™t complain. After all, in the light of the sageâ€™s truth, I am indeed despicable and insignificant. Writing such words in self-reflection may well be another sin. Being a role model for others to study under these circumstances feels undeserved. Thatâ€™s why I say Iâ€™m also in darknessâ€”a presence that should be cleansed and purged.&lt;/p&gt;
&lt;p&gt;Itâ€™s too bitter, too exhausting. So later, I changed my mind and stopped aspiring to be a sage. Someone told me that humans experience three stages of perception: seeing mountains as mountains, seeing mountains as not mountains, and seeing mountains as mountains again. I shook my head, puzzled. &amp;quot;So, what are you trying to say? Teach me to reach the third stage?&amp;quot;...&lt;/p&gt;
&lt;p&gt;That night, on our way home, my reserved father suddenly played music in the car. Judging the music itself, it could be described as lowbrow, clichÃ©d, and utterly &amp;quot;tasteless.&amp;quot; Yet this creation, excluded from the sacred halls of music, gave my fatherâ€”who almost never listens to musicâ€”the strength of melody. I donâ€™t know why, but even though this moment has long passed, every time I think of it, I feel like crying. To some, listening to such music might indeed be a sin: it takes up market share for quality music and repeatedly lowers public aesthetic standards.&lt;/p&gt;
&lt;p&gt;But in this world, there is something even more irrefutable than truth: facts. The fact is, this music brought joy to my father, letting him experience a feeling he had never had during his school days. The pure nature of truth and the complex reality of life always hold some irreconcilable tension. Truth may seem lofty and authoritative, but it cannot erase the genuine experiences of lives rooted in the dust. Yes, critics are absolutely correctâ€”such music is a blight on the market. But what if they arenâ€™t? The joy my father felt from &amp;quot;lowbrow&amp;quot; music might be far more genuine than the restrained satisfaction we feel pursuing &amp;quot;refined tastes&amp;quot;â€”something truth cannot refute.&lt;/p&gt;
&lt;p&gt;&amp;quot;I donâ€™t need you to teach me about the third stage of perception. Why cling so desperately to right and wrong, good and bad?&amp;quot;&lt;/p&gt;
&lt;p&gt;Perhaps the notion of &amp;quot;broadening oneâ€™s horizons&amp;quot; is similar. Those voices criticizing superficiality often overlook that so-called superficiality is the foundation, a &amp;quot;necessary condition.&amp;quot; To assume that only deep reflection and inner enrichment count as &amp;quot;broadening oneâ€™s horizons&amp;quot; while dismissing these foundationsâ€”how can one claim to have built a complete inner world? While fleeting glances may lack depth, without them, depth is but a castle in the air.&lt;/p&gt;
&lt;p&gt;For the diligent &amp;quot;exam takers&amp;quot; of small towns, itâ€™s a pity they never truly traverse the worldâ€™s vastness. All they have are truths taught by the sacred hall... Yet beneath this sacred hall lies the selfâ€”the most irrefutable fact.&lt;/p&gt;
&lt;p&gt;I am no sage, not even closeâ€”more like a muddled person. Like that &amp;quot;lowbrow&amp;quot; music, it may never enter the sacred halls of art, but one night, it became my fatherâ€™s truest solace. And that moment, more moving than truth.&lt;/p&gt;
</content:encoded><dc:creator>Frosti</dc:creator><pubDate>Wed, 04 Dec 2024 16:00:00 GMT</pubDate></item><item><title>Using mdx in Frosti</title><link>https://frosti.saroprock.com/blog/frosti-mdx/</link><guid isPermaLink="true">https://frosti.saroprock.com/blog/frosti-mdx/</guid><description>Using MDX in Frosti to enrich article content with more components</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://frosti.saroprock.com/blog/frosti-mdx/&quot;&gt;https://frosti.saroprock.com/blog/frosti-mdx/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;import Collapse from &amp;quot;../../components/mdx/Collapse.astro&amp;quot;;
import Diff from &amp;quot;../../components/mdx/Diff.astro&amp;quot;;
import Error from &amp;quot;../../components/mdx/Error.astro&amp;quot;;
import Info from &amp;quot;../../components/mdx/Info.astro&amp;quot;;
import Kbd from &amp;quot;../../components/mdx/Kbd.astro&amp;quot;;
import Success from &amp;quot;../../components/mdx/Success.astro&amp;quot;;
import Warning from &amp;quot;../../components/mdx/Warning.astro&amp;quot;;
import TimeLine from &amp;quot;../../components/mdx/TimeLine.astro&amp;quot;;
import LinkCard from &amp;quot;../../components/mdx/LinkCard.astro&amp;quot;;&lt;/p&gt;
&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;This article describes how to use the components provided by Frosti in &lt;code&gt;mdx&lt;/code&gt; to realize the functions that can&amp;#39;t be realized by normal &lt;code&gt;md&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Main text&lt;/h2&gt;
&lt;h3&gt;Getting started&lt;/h3&gt;
&lt;p&gt;First you need to create an &lt;code&gt;mdx&lt;/code&gt; file, which is as simple as changing the extension to &lt;code&gt;.mdx&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Introducing&lt;/h3&gt;
&lt;p&gt;The components provided by Frosti are placed in the &lt;code&gt;/mdx&lt;/code&gt; folders. Write something under the document properties (frontmatter):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;import Collapse from &amp;quot;../../components/mdx/Collapse.astro&amp;quot;;
import Diff from &amp;quot;../../components/mdx/Diff.astro&amp;quot;;
import Error from &amp;quot;../../components/mdx/Error.astro&amp;quot;;
import Info from &amp;quot;../../components/mdx/Info.astro&amp;quot;;
import Kbd from &amp;quot;../../components/mdx/Kbd.astro&amp;quot;;
import Success from &amp;quot;../../components/mdx/Success.astro&amp;quot;;
import Warning from &amp;quot;../../components/mdx/Warning.astro&amp;quot;;
import TimeLine from &amp;quot;../../components/mdx/TimeLine.astro&amp;quot;;
import LinkCard from &amp;quot;../../components/mdx/LinkCard.astro&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Example&lt;/h3&gt;
&lt;h4&gt;Collapse&lt;/h4&gt;
&lt;Collapse title=&quot;This is an example text.&quot;&gt;
  This is the hidden content!
&lt;/Collapse&gt;

&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;&amp;lt;Collapse title=&amp;quot;This is an example text.&amp;quot;&amp;gt;
  This is the hidden content!
&amp;lt;/Collapse&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Diff&lt;/h4&gt;
&lt;p&gt;&lt;Diff r=&quot;https://frosti.saroprock.com/image/r.png&quot; l=&quot;https://frosti.saroprock.com/image/l.png&quot;&gt;&lt;/Diff&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;&amp;lt;Diff r=&amp;quot;/image/r.png&amp;quot; l=&amp;quot;/image/l.png&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Error&lt;/h4&gt;
&lt;p&gt;&lt;Error&gt;Maybe something went wrong?&lt;/Error&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;&amp;lt;Error&amp;gt;Maybe something went wrong? &amp;lt;/Error&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Warning&lt;/h4&gt;
&lt;p&gt;&lt;Warning&gt;Hey! Watch out for potholes! &lt;/Warning&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;&amp;lt;Warning&amp;gt;Hey! Watch out for potholes! &amp;lt;/Warning&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Message&lt;/h4&gt;
&lt;p&gt;&lt;Info&gt;It&amp;#39;s just a message. &lt;/Info&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;&amp;lt;Info&amp;gt;It&amp;#39;s just a message. &amp;lt;/Info&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Success&lt;/h4&gt;
&lt;p&gt;&lt;Success&gt;Congratulations on your successful deployment! &lt;/Success&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;&amp;lt;Success&amp;gt;Congratulations on your successful deployment! &amp;lt;/Success&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Kbd&lt;/h4&gt;
&lt;p&gt;&lt;Kbd&gt;Ctrl&lt;/Kbd&gt; + &lt;Kbd&gt;C&lt;/Kbd&gt; to copy the text.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;&amp;lt;Kbd&amp;gt;Ctrl&amp;lt;/Kbd&amp;gt; + &amp;lt;Kbd&amp;gt;C&amp;lt;/Kbd&amp;gt; to copy the text.
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;TimeLine&lt;/h4&gt;
&lt;p&gt;&amp;lt;TimeLine
  items={[
    { year: &amp;quot;1984&amp;quot;, event: &amp;quot;First Macintosh computer&amp;quot; },
    { year: &amp;quot;1998&amp;quot;, event: &amp;quot;iMac&amp;quot; },
    { year: &amp;quot;2001&amp;quot;, event: &amp;quot;iPod&amp;quot; },
    { year: &amp;quot;2007&amp;quot;, event: &amp;quot;iPhone&amp;quot; },
    { year: &amp;quot;2015&amp;quot;, event: &amp;quot;Apple Watch&amp;quot; },
  ]}
/&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;&amp;lt;TimeLine
  items={[
    { year: &amp;quot;1984&amp;quot;, event: &amp;quot;First Macintosh computer&amp;quot; },
    { year: &amp;quot;1998&amp;quot;, event: &amp;quot;iMac&amp;quot; },
    { year: &amp;quot;2001&amp;quot;, event: &amp;quot;iPod&amp;quot; },
    { year: &amp;quot;2007&amp;quot;, event: &amp;quot;iPhone&amp;quot; },
    { year: &amp;quot;2015&amp;quot;, event: &amp;quot;Apple Watch&amp;quot; },
  ]}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;LinkCard&lt;/h4&gt;
&lt;p&gt;&lt;LinkCard
  title=&quot;Frosti&quot;
  desc=&quot;My blog project!&quot;
  url=&quot;https://github.com/EveSunMaple/Frosti&quot;
  img=&quot;https://frosti.saroprock.com/view.png&quot;
/&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-astro&quot;&gt;&amp;lt;LinkCard
  title=&amp;quot;Frosti&amp;quot;
  desc=&amp;quot;My blog project!&amp;quot;
  url=&amp;quot;https://github.com/EveSunMaple/Frosti&amp;quot;
  img=&amp;quot;/view.png&amp;quot;
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</content:encoded><dc:creator>Frosti</dc:creator><pubDate>Thu, 11 Jul 2024 16:00:00 GMT</pubDate></item><item><title>Markdown Style Guide</title><link>https://frosti.saroprock.com/blog/markdown-style-guide/</link><guid isPermaLink="true">https://frosti.saroprock.com/blog/markdown-style-guide/</guid><description>Here is a sample of some basic Markdown syntax that can be used when writing Markdown content in Astro.</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://frosti.saroprock.com/blog/markdown-style-guide/&quot;&gt;https://frosti.saroprock.com/blog/markdown-style-guide/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;Here is a sample of some basic Markdown syntax that can be used when writing Markdown content in Astro.&lt;/p&gt;
&lt;h2&gt;Headings&lt;/h2&gt;
&lt;p&gt;The following HTML &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;â€”&lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; elements represent six levels of section headings. &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; is the highest section level while &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; is the lowest.&lt;/p&gt;
&lt;h1&gt;H1&lt;/h1&gt;
&lt;h2&gt;H2&lt;/h2&gt;
&lt;h3&gt;H3&lt;/h3&gt;
&lt;h4&gt;H4&lt;/h4&gt;
&lt;h5&gt;H5&lt;/h5&gt;
&lt;h6&gt;H6&lt;/h6&gt;
&lt;h2&gt;Paragraph&lt;/h2&gt;
&lt;p&gt;Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.&lt;/p&gt;
&lt;p&gt;Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.&lt;/p&gt;
&lt;h2&gt;Images&lt;/h2&gt;
&lt;h4&gt;Syntax&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;![Alt text](./full/or/relative/path/of/image)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Output&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/home.webp&quot; alt=&quot;blog placeholder&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Blockquotes&lt;/h2&gt;
&lt;p&gt;The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a &lt;code&gt;footer&lt;/code&gt; or &lt;code&gt;cite&lt;/code&gt; element, and optionally with in-line changes such as annotations and abbreviations.&lt;/p&gt;
&lt;h3&gt;Blockquote without attribution&lt;/h3&gt;
&lt;h4&gt;Syntax&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;&amp;gt; Tiam, ad mint andaepu dandae nostion secatur sequo quae.
&amp;gt; **Note** that you can use _Markdown syntax_ within a blockquote.
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Output&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Tiam, ad mint andaepu dandae nostion secatur sequo quae.
&lt;strong&gt;Note&lt;/strong&gt; that you can use &lt;em&gt;Markdown syntax&lt;/em&gt; within a blockquote.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Blockquote with attribution&lt;/h3&gt;
&lt;h4&gt;Syntax&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;&amp;gt; Don&amp;#39;t communicate by sharing memory, share memory by communicating.&amp;lt;br&amp;gt;
&amp;gt; â€” &amp;lt;cite&amp;gt;Rob Pike[^1]&amp;lt;/cite&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Output&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Don&amp;#39;t communicate by sharing memory, share memory by communicating.&lt;br&gt;
â€” &lt;cite&gt;Rob Pike[^1]&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[^1]: The above quote is excerpted from Rob Pike&amp;#39;s &lt;a href=&quot;https://www.youtube.com/watch?v=PAAkCSZUG1c&quot;&gt;talk&lt;/a&gt; during Gopherfest, November 18, 2015.&lt;/p&gt;
&lt;h2&gt;Tables&lt;/h2&gt;
&lt;h4&gt;Syntax&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;| Italics   | Bold     | Code   |
| --------- | -------- | ------ |
| _italics_ | **bold** | `code` |
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Output&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Italics&lt;/th&gt;
&lt;th&gt;Bold&lt;/th&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;em&gt;italics&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;bold&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;code&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;Code Blocks&lt;/h2&gt;
&lt;h4&gt;Syntax&lt;/h4&gt;
&lt;p&gt;we can use 3 backticks ``` in new line and write snippet and close with 3 backticks on new line and to highlight language specific syntac, write one word of language name after first 3 backticks, for eg. html, javascript, css, markdown, typescript, txt, bash&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;```cpp
#include &amp;lt;bits/stdc++.h&amp;gt;
using namespace std;
const int N = 1e5 + 5;
int n, k, a[N];
long long ans;
vector&amp;lt;int&amp;gt; v[N];
int main()
{
    scanf(&amp;quot;%d%d&amp;quot;, &amp;amp;n, &amp;amp;k);
    for (int i = 1; i &amp;lt;= n; i++)
    {
        scanf(&amp;quot;%d&amp;quot;, &amp;amp;a[i]);
        v[i % k].push_back(a[i]);
    }
    for (int i = 0; i &amp;lt; k; i++)
        sort(v[i].rbegin(), v[i].rend());
    for (int i = 0; i &amp;lt; k; i++)
    {
        for (int j = 0; j + 1 &amp;lt; v[i].size(); j += 2)
        {
            ans += v[i][j] + v[i][j + 1];
        }
    }
    printf(&amp;quot;%lld\n&amp;quot;, ans);
    return 0;
}
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Output&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;#include &amp;lt;bits/stdc++.h&amp;gt;
using namespace std;
const int N = 1e5 + 5;
int n, k, a[N];
long long ans;
vector&amp;lt;int&amp;gt; v[N];
int main()
{
    scanf(&amp;quot;%d%d&amp;quot;, &amp;amp;n, &amp;amp;k);
    for (int i = 1; i &amp;lt;= n; i++)
    {
        scanf(&amp;quot;%d&amp;quot;, &amp;amp;a[i]);
        v[i % k].push_back(a[i]);
    }
    for (int i = 0; i &amp;lt; k; i++)
        sort(v[i].rbegin(), v[i].rend());
    for (int i = 0; i &amp;lt; k; i++)
    {
        for (int j = 0; j + 1 &amp;lt; v[i].size(); j += 2)
        {
            ans += v[i][j] + v[i][j + 1];
        }
    }
    printf(&amp;quot;%lld\n&amp;quot;, ans);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;List Types&lt;/h2&gt;
&lt;h3&gt;Ordered List&lt;/h3&gt;
&lt;h4&gt;Syntax&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;1. First item
2. Second item
3. Third item
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Output&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;First item&lt;/li&gt;
&lt;li&gt;Second item&lt;/li&gt;
&lt;li&gt;Third item&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Unordered List&lt;/h3&gt;
&lt;h4&gt;Syntax&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;- List item
- Another item
- And another item
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Output&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;List item&lt;/li&gt;
&lt;li&gt;Another item&lt;/li&gt;
&lt;li&gt;And another item&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Nested list&lt;/h3&gt;
&lt;h4&gt;Syntax&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;- Fruit
  - Apple
  - Orange
  - Banana
- Dairy
  - Milk
  - Cheese
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Output&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Fruit&lt;ul&gt;
&lt;li&gt;Apple&lt;/li&gt;
&lt;li&gt;Orange&lt;/li&gt;
&lt;li&gt;Banana&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dairy&lt;ul&gt;
&lt;li&gt;Milk&lt;/li&gt;
&lt;li&gt;Cheese&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other Elements&lt;/h2&gt;
&lt;h4&gt;Syntax&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;&amp;lt;abbr title=&amp;quot;Graphics Interchange Format&amp;quot;&amp;gt;GIF&amp;lt;/abbr&amp;gt; is a bitmap image format.

H&amp;lt;sub&amp;gt;2&amp;lt;/sub&amp;gt;O

X&amp;lt;sup&amp;gt;n&amp;lt;/sup&amp;gt; + Y&amp;lt;sup&amp;gt;n&amp;lt;/sup&amp;gt; = Z&amp;lt;sup&amp;gt;n&amp;lt;/sup&amp;gt;

Press &amp;lt;kbd&amp;gt;&amp;lt;kbd&amp;gt;CTRL&amp;lt;/kbd&amp;gt;+&amp;lt;kbd&amp;gt;ALT&amp;lt;/kbd&amp;gt;+&amp;lt;kbd&amp;gt;Delete&amp;lt;/kbd&amp;gt;&amp;lt;/kbd&amp;gt; to end the session.

Most &amp;lt;mark&amp;gt;salamanders&amp;lt;/mark&amp;gt; are nocturnal, and hunt for insects, worms, and other small creatures.
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Output&lt;/h4&gt;
&lt;p&gt;&lt;abbr title=&quot;Graphics Interchange Format&quot;&gt;GIF&lt;/abbr&gt; is a bitmap image format.&lt;/p&gt;
&lt;p&gt;H&lt;sub&gt;2&lt;/sub&gt;O&lt;/p&gt;
&lt;p&gt;X&lt;sup&gt;n&lt;/sup&gt; + Y&lt;sup&gt;n&lt;/sup&gt; = Z&lt;sup&gt;n&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Press &lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;ALT&lt;/kbd&gt;+&lt;kbd&gt;Delete&lt;/kbd&gt; to end the session.&lt;/p&gt;
&lt;p&gt;Most &lt;mark&gt;salamanders&lt;/mark&gt; are nocturnal, and hunt for insects, worms, and other small creatures.&lt;/p&gt;
</content:encoded><dc:creator>Frosti</dc:creator><pubDate>Sun, 30 Jun 2024 16:00:00 GMT</pubDate></item><item><title>Using MDX</title><link>https://frosti.saroprock.com/blog/using-mdx/</link><guid isPermaLink="true">https://frosti.saroprock.com/blog/using-mdx/</guid><description>Lorem ipsum dolor sit amet</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://frosti.saroprock.com/blog/using-mdx/&quot;&gt;https://frosti.saroprock.com/blog/using-mdx/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;This theme comes with the &lt;a href=&quot;https://docs.astro.build/en/guides/integrations-guide/mdx/&quot;&gt;@astrojs/mdx&lt;/a&gt; integration installed and configured in your &lt;code&gt;astro.config.mjs&lt;/code&gt; config file. If you prefer not to use MDX, you can disable support by removing the integration from your config file.&lt;/p&gt;
&lt;h2&gt;Why MDX?&lt;/h2&gt;
&lt;p&gt;MDX is a special flavor of Markdown that supports embedded JavaScript &amp;amp; JSX syntax. This unlocks the ability to &lt;a href=&quot;https://docs.astro.build/en/guides/markdown-content/#mdx-features&quot;&gt;mix JavaScript and UI Components into your Markdown content&lt;/a&gt; for things like interactive charts or alerts.&lt;/p&gt;
&lt;p&gt;If you have existing content authored in MDX, this integration will hopefully make migrating to Astro a breeze.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;Here is how you import and use a UI component inside of MDX.&lt;br&gt;When you open this page in the browser, you should see the clickable button below.&lt;/p&gt;
&lt;h2&gt;More Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mdxjs.com/docs/what-is-mdx&quot;&gt;MDX Syntax Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.astro.build/en/guides/markdown-content/#markdown-and-mdx-pages&quot;&gt;Astro Usage Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;a href=&quot;https://docs.astro.build/en/reference/directives-reference/#client-directives&quot;&gt;Client Directives&lt;/a&gt; are still required to create interactive components. Otherwise, all components in your MDX will render as static HTML (no JavaScript) by default.&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><dc:creator>Frosti</dc:creator><pubDate>Fri, 01 Jul 2022 16:00:00 GMT</pubDate></item></channel></rss>